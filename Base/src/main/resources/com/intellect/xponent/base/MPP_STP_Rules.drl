package com.intellect.xponent.base;


import java.util.*;
import com.seec.insurance.pc.comml.application.lob.quote.beans.CoverageInfoBean;
import com.seec.insurance.pc.comml.application.lob.quote.beans.LimitInfoBean;
import com.seec.insurance.pc.comml.application.lob.quote.beans.QuoteInfoBean;
import com.seec.insurance.pc.comml.application.lob.quote.beans.RiskInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.LOBInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.ScheduleInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.ScheduleGroupInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.LossInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.PreviousInsuranceInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.UWQuestionInfoBean;
import com.seec.insurance.pc.comml.application.workflowmgmt.beans.RulesStatusBean;
import com.seec.insurance.pc.comml.utility.beans.CurrencyInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.ScheduleItemInfoBean;
import com.seec.insurance.rules.beans.STPRulesResponseBean;
import com.seec.insurance.pc.comml.application.beans.CommlPolicyInfoBean;
import com.seec.insurance.pc.comml.application.lob.beans.SchedulePropertyInfoBean;

function RulesStatusBean setRuleStatus(String ruleName,String status,String seqNum,String inputValue,String inputType)
{
    RulesStatusBean rulesStatusBean=new RulesStatusBean();
    rulesStatusBean.setRule(ruleName);
    rulesStatusBean.setStatus(status);
    rulesStatusBean.setSeqNum(seqNum);
    rulesStatusBean.setInputValue(inputValue);
    rulesStatusBean.setValueType(inputType);
    return rulesStatusBean;
}

/*
// FailureMessage 1:- MPP section has more than 1 successfully rated Quotes
rule "MPPSTP_MPP_QUOTES"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
		$lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP"),qSize:quotes.size()>1) from $commlPolicyInfoBean.getLobs();
	then
	    System.out.println("MPP STPRule 1 FAILED : "+qSize);
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule1","false","1",String.valueOf(qSize),""));
        $STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));		
        update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end

//FailureMessage 2:- Limit of Insurance is greater than $500,000
rule "MPPSTP_AGG_LM_INSU"
ruleflow-group "MPPSTP"
    when
        $STPRulesResponseBean:STPRulesResponseBean();
        HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
        $commlPolicyInfoBean : CommlPolicyInfoBean();
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
        $quoteInfo: QuoteInfoBean( ) from $lobInfo.getQuotes()
        $riskInfo: RiskInfoBean(description.equalsIgnoreCase("PROP")) from $quoteInfo.getRiskinfos()
        $coverageInfo: CoverageInfoBean(coverageName.equalsIgnoreCase("BLDG")) from $riskInfo.getCoverages()
        $limitInfo: LimitInfoBean(limitAmt:currency.getAmount() > 500000,limitAppliesTo.equalsIgnoreCase("Coverage")) from $coverageInfo.getLimits()
    then
        System.out.println("MPP STPRule 2 FAILED");
    	$STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule2","false","2",limitAmt.toString(),"CURRENCY"));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	update($commlPolicyInfoBean);
    	drools.setFocus("MPPReview");
end

//FailureMessage 3:- number of locations added for MPP section are greater than 2
rule "MPPSTP_Locations_added_for_MPP_section"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
		$lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
		$scheduleInfo : ScheduleInfoBean(  ) from $lobInfo.getSchedules();
		$scheduleGroupInfo : ScheduleGroupInfoBean( scheduleCode.equalsIgnoreCase("LOCATION")) from $scheduleInfo.getScheduleGroups();
		$scheduleItemInfoBean : ScheduleItemInfoBean() from $scheduleGroupInfo.getScheduleItems();
		$schedulePropertyInfoBean : SchedulePropertyInfoBean((PropertyName=="City")&& (PropertyValue=="Toronto"||PropertyValue=="Quebec"||PropertyValue=="Vancouver"||$scheduleGroupInfo.getScheduleItems().size() > 2))
    then
    	System.out.println("MPP STPRule 3 Failed - LOCATION ********************"+ $scheduleGroupInfo.getScheduleCode());
    	$STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule3","false","3",String.valueOf($scheduleGroupInfo.getScheduleItems().size()),""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end



//FailureMessage 4:- Premium amount for MPP quote is greater than $15000
rule "MPPSTP_PREM_AMT_MPP"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
		$lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
        $quoteInfo: QuoteInfoBean(premAmt:premium.getAmount() > 15000) from $lobInfo.getQuotes()
        HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	then
    	System.out.println("MPP STPRule 4 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule4","false","4",premAmt.toString(),"CURRENCY"));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end


//FailureMessage 5:- MPP Loss History section has one or more no of loss
rule "MPPSTP_LOSS_HIST_MPP"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP") && lossSize:losses.size() > 0) from $commlPolicyInfoBean.getLobs();
	then
	    System.out.println("MPP STPRule 5 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule5","false","5",String.valueOf(lossSize),""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end

//FailureMessage 6:- Previous Insurance details are not entered for previous year
rule "MPPSTP_MPP_Loss_History"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
		$commlPolicyInfoBean : CommlPolicyInfoBean();
		HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP"),preInsSize : previousInsurances.size()) from $commlPolicyInfoBean.getLobs();
	    Boolean(booleanValue == true) from preInsSize == 0 or
	    not( PreviousInsuranceInfoBean( java.util.Calendar.getInstance().get(java.util.Calendar.YEAR)-1 == OperationHelper.getYear(getPolicyEffectiveDate())) from $lobInfo.getPreviousInsurances())
	then
	    System.out.println("MPP STPRule 6 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule6","false","6","",""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end


//FailureMessage 7:- Fire Protection class on any of the location buildings is > 5
rule "MPPSTP_Fire_Protection_Location"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
		$scheduleInfo : ScheduleInfoBean(  ) from $lobInfo.getSchedules();
		$scheduleGroupInfo : ScheduleGroupInfoBean( scheduleCode.equalsIgnoreCase("LOCATION")) from $scheduleInfo.getScheduleGroups();
    	$scheduleItemInfoBean : ScheduleItemInfoBean() from $scheduleGroupInfo.getScheduleItems();
		$schedulePropertyInfoBean : SchedulePropertyInfoBean((PropertyName=="FIRE") && (propValue:PropertyValue not in ("1","1/1x","2","2/2x","3","3/3x","4","4/4x","5","5/5x")))
    then
    	System.out.println("MPP STPRule 7 FAILED");
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule7","false","7",propValue.toString(),""));
        update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end


//FailureMessage 8:- Catastrophe exposure Exists
rule "MPPSTP_Catastrophe_exposure_Exists"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
	    $questionInfo: UWQuestionInfoBean("QuestionKEY005".equalsIgnoreCase(questionNumber), "Yes".equalsIgnoreCase(response),responseValue:response) from $lobInfo.getQuestions()
	 then
	    System.out.println("MPP STPRule 8 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule8","false","8",responseValue,""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end


//FailureMessage 9:- Customer has been declined or had insurance coverage canceled or non-renewed in the past 3 years
rule "MPPSTP_CUST_DECLINE"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
	    $questionInfo: UWQuestionInfoBean("QuestionKEY012".equalsIgnoreCase(questionNumber), "YES".equalsIgnoreCase(response),responseValue:response) from $lobInfo.getQuestions()
	 then
    	System.out.println("MPP STPRule 9 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule9","false","9",responseValue,""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end

//FailureMessage 10:-location building does not have Alarm Devices installed or Details mentioned
rule "MPPSTP_BUILDING_ALARM"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
		$scheduleInfo : ScheduleInfoBean(  ) from $lobInfo.getSchedules();
		$scheduleGroupInfo : ScheduleGroupInfoBean( scheduleCode.equalsIgnoreCase( "LOCATION"),scheduleItems.size() > 2 ) from $scheduleInfo.getScheduleGroups();
        $scheduleItemInfoBean : ScheduleItemInfoBean() from $scheduleGroupInfo.getScheduleItems();
		$schedulePropertyInfoBean : SchedulePropertyInfoBean(!((propertyName=="BUCEN") ||(propertyName=="BUOT")||(propertyName=="FIRECEN")||(propertyName=="FIREOT")||(propertyName=="SMOKE") )&&(propValue:propertyValue=="false"))from $scheduleItemInfoBean.getProperties()
then
        System.out.println("MPP STPRule 10 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule10","false","10",propValue.toString(),""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end


//FailureMessage 11:-[MPP] Net loss is equal to or more than 2
rule "MPPSTP_NET_LOSS"
ruleflow-group "MPPSTP"
	when
	    $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
		HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
		$scheduleInfo : ScheduleInfoBean(  ) from $lobInfo.getSchedules();
		$scheduleGroupInfo : ScheduleGroupInfoBean( scheduleCode.equalsIgnoreCase("FINSTMT")) from $scheduleInfo.getScheduleGroups();
        $scheduleItemInfoBean : ScheduleItemInfoBean() from $scheduleGroupInfo.getScheduleItems();
		$schedulePropertyInfoBean : SchedulePropertyInfoBean((PropertyName=="NETLOSS" && PropertyValue != null))
	then
        System.out.println("MPP STPRule 11 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule11","false","11","",""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end


//FailureMessage 12:-number of Vehicles added in Vehicle Schedule are more than 3
rule "MPPSTP_NUM_OF_VEHICLE"
ruleflow-group "MPPSTP"
    when
        $STPRulesResponseBean:STPRulesResponseBean();
	    $commlPolicyInfoBean : CommlPolicyInfoBean();
	    HashMap(this["MPP_ISSTP"] == null || this["MPP_ISSTP"]==true) from $STPRulesResponseBean.resultMap
	    $lobInfo: LOBInfoBean(lob.equalsIgnoreCase("MPP")) from $commlPolicyInfoBean.getLobs();
        $scheduleInfo: ScheduleInfoBean(  ) from $lobInfo.getSchedules();
        $scheduleGroupInfo: ScheduleGroupInfoBean(scheduleCode.equalsIgnoreCase( "VEHICLE"),schSize:scheduleItems.size()>3) from $scheduleInfo.getScheduleGroups();
    then
        System.out.println("MPP STPRule 12 FAILED");
        $STPRulesResponseBean.getRuleStatusBeans().add(setRuleStatus("MPP_STPRule12","false","12",String.valueOf(schSize),""));
    	$STPRulesResponseBean.getResultMap().put("MPP_ISSTP",new Boolean(false));
    	update($STPRulesResponseBean);
    	drools.setFocus("MPPReview");
end*/
